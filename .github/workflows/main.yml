name: Flutter CI

on:
  release:
    types: [published]

jobs:

  build-and-release-macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
      - name: Install project dependencies
        run: flutter pub get
      - name: Generate intermediates
        run: flutter pub run build_runner build --delete-conflicting-outputs
      - name: Enable macOS build
        run: flutter config --enable-macos-desktop
      - name: "Generate AppLocalizations files"
        run: flutter gen-l10n
      - name: Build artifacts
        run: flutter build macos --release
      - name: Move release .app
        run: mkdir build/macos/Build/Products/Release/app && mv build/macos/Build/Products/Release/Jernal.app build/macos/Build/Products/Release/app
      - run: | 
          for filename in $(ls build/macos/Build/Products/Release);
          do
            echo "File: ${filename}";
          done;
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: Jernal-${{github.ref_name}}-macos.zip
          exclusions: ''
          directory: build/macos/Build/Products/Release/app
      - name: macOS Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: build/macos/Build/Products/Release/app/Jernal-${{github.ref_name}}-macos.zip
      - name: Install app-store-connect (codemagic CLI)
        run: pip3 install codemagic-cli-tools
      - name: Set variables from secrets
        run: |
          export APP_STORE_CONNECT_ISSUER_ID=${{ secrets.APPSTORE_ISSUER_ID }} \
          export APP_STORE_CONNECT_KEY_IDENTIFIER=${{ secrets.APPSTORE_API_KEY_ID }} \
          export APP_STORE_CONNECT_PRIVATE_KEY=${{ secrets.APPSTORE_API_PRIVATE_KEY }}
      

  #build-and-release-linux:
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/checkout@v2
  #    - uses: subosito/flutter-action@v1
  #      with:
  #        channel: 'stable'
  #        flutter-version: '2.10.0'
  #    - name: Install dependencies
  #      run: sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
  #    - name: Install project dependencies
  #      run: flutter pub get
  #    - name: Generate intermediates
  #      run: flutter pub run build_runner build --delete-conflicting-outputs
  #    - name: Enable linux build
  #      run: flutter config --enable-linux-desktop
  #    - name: Build artifacts
  #      run: flutter build linux --release
  #    - name: Archive Release
  #      uses: thedoctor0/zip-release@master
  #      with:
  #        type: 'zip'
  #        filename: MacRecoveryX-${{github.ref_name}}-linux.zip
  #        directory: build/linux/x64/release/bundle
  #    - name: Linux Release
  #      uses: softprops/action-gh-release@v1
  #      if: startsWith(github.ref, 'refs/tags/')
  #      env:
  #        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #      with:
  #        files: build/linux/x64/release/bundle/MacRecoveryX-${{github.ref_name}}-linux.zip

  #build-and-release-windows:
  #  runs-on: windows-latest
  #  steps:
  #    - uses: actions/checkout@v2
  #    - uses: subosito/flutter-action@v1
  #      with:
  #        channel: 'stable'
  #        flutter-version: '2.10.0'
  #    - name: Install project dependencies
  #      run: flutter pub get
  #    - name: Generate intermediates
  #      run: flutter pub run build_runner build --delete-conflicting-outputs
  #    - name: Enable windows build
  #      run: flutter config --enable-windows-desktop
  #    - name: Build artifacts
  #      run: flutter build windows --release
  #    - name: Archive Release
  #      uses: thedoctor0/zip-release@master
  #      with:
  #        type: 'zip'
  #        filename: MacRecoveryX-${{github.ref_name}}-windows.zip
  #        directory: build/windows/runner/Release
  #    - name: Windows Release
  #      uses: softprops/action-gh-release@v1
  #      if: startsWith(github.ref, 'refs/tags/')
  #      env:
  #        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #      with:
  #        files: build/windows/runner/Release/MacRecoveryX-${{github.ref_name}}-windows.zip